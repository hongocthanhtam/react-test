{"version":3,"sources":["img/changeIcon.jpg","img/circle_icon.png","img/github_icon.png","components/TodoContext.js","components/Todo.js","components/TodoForm.js","components/ErrorBoundary.js","components/TodoList.js","Home.js","components/ColorContext.js","components/LoginContext.js","components/Button.js","Login.js","Parent.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoContext","React","createContext","Todo","props","_useState","useState","todo","text","_useState2","Object","slicedToArray","textData","setTextData","_useContext","useContext","toggleComplete","onDelete","deleteEdit","_props$todo","id","editing","complete","react_default","a","createElement","className","Fragment","onSubmit","event","preventDefault","editTodoTask","name","value","onChange","target","type","onClick","style","color","textDecoration","disabled","showEditTodoTask","window","confirm","TodoForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","shortid","generate","textInput","current","setState","axios","post","createRef","state","focus","ref","placeholder","Component","ErrorBoundary","error","errorInfo","whiteSpace","toString","componentStack","children","TodoList","todos","setTodos","_useState3","_useState4","todoToShow","setTodoToShow","useEffect","create","get","then","res","data","sort","b","updateTodoToShow","handleDeleteTodo","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","filter","delete","concat","stop","_x","apply","arguments","map","objectSpread","editText","todotasks","put","TodoForm_TodoForm","toConsumableArray","ErrorBoundary_ErrorBoundary","components_TodoContext","Provider","t","key","Home","ColorContext","LoginContext","Button","components_ColorContext","Consumer","changBg","components_LoginContext","onLogin","backgroundColor","button","Login","st","_this2","btn","components_Button","src","changeColor","alt","width","height","function","Parent","page","handleClick","src_Home","src_Login","Header","circle","github","App","bgColor","change","bgColors","Math","floor","random","length","src_Header","Parent_Parent","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6904219f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/changeIcon.e9f5edd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/circle_icon.9f74f076.png\";","module.exports = __webpack_public_path__ + \"static/media/github_icon.c0846175.png\";","import React from \"react\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nexport default TodoContext;\r\n","import React, { useState, useContext } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport TodoContext from \"./TodoContext\";\r\n\r\nexport default props => {\r\n  const [textData, setTextData] = useState(props.todo.text);\r\n  const { toggleComplete, onDelete, deleteEdit } = useContext(TodoContext);\r\n  const onChangeHandle = event => {\r\n    setTextData(event.target.value);\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    props.editTodoTask(props.todo.id, textData);\r\n  };\r\n  const { todo } = props;\r\n  const { id, text, editing, complete } = props.todo;\r\n  return (\r\n    <div className=\"sub_content padt50 sub_form\">\r\n      <div className=\"item\">\r\n        {editing === true ? (\r\n          <>\r\n            <form className=\"view_form\" onSubmit={handleSubmit}>\r\n              <div className=\"sub_viewForm view_input input_edit\">\r\n                <input name=\"text\" value={textData} onChange={onChangeHandle} />\r\n              </div>\r\n              <div className=\"sub_viewForm\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => deleteEdit(id)}\r\n                  className=\"btn btn--icon radis\"\r\n                >\r\n                  <i className=\"material-icons\">clear</i>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"view_form\">\r\n            <div className=\"sub_viewForm view_input\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn--icon radis\"\r\n                style={{\r\n                  color: complete ? \"#85bf6b\" : \"\"\r\n                }}\r\n                onClick={() => toggleComplete(todo)}\r\n              >\r\n                <i className=\"material-icons\">done</i>\r\n              </button>\r\n              <input\r\n                style={{\r\n                  textDecoration: complete ? \"line-through #85bf6b\" : \"\",\r\n                  color: complete ? \"#666\" : \"\"\r\n                }}\r\n                id={id}\r\n                type=\"text\"\r\n                value={text}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"sub_viewForm\">\r\n              {complete !== true ? (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => props.showEditTodoTask(id)}\r\n                  className=\"btn btn--icon radis\"\r\n                >\r\n                  <i className=\"material-icons\">edit</i>\r\n                </button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <button\r\n                className=\"btn btn--icon radis\"\r\n                onClick={() => {\r\n                  if (window.confirm(\"Delete the tasks?\")) {\r\n                    onDelete(id);\r\n                  }\r\n                }}\r\n              >\r\n                <i className=\"material-icons\">delete</i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// Todo.propTypes = {\r\n//   todo: PropTypes.shape({\r\n//     id: PropTypes.string.isRequired,\r\n//     text: PropTypes.string.isRequired,\r\n//     editing: PropTypes.bool,\r\n//     complete: PropTypes.bool\r\n//   }).isRequired,\r\n//   deleteEdit: PropTypes.func,\r\n//   toggleComplete: PropTypes.func,\r\n//   showEditTodoTask: PropTypes.func,\r\n//   onDelete: PropTypes.func\r\n// };\r\n","import React from \"react\";\r\n//npm install shortid\r\nimport shortid from \"shortid\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class TodoForm extends React.Component {\r\n  //Set state\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.textInput = React.createRef();\r\n    this.state = {\r\n      text: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.textInput.current.focus();\r\n  }\r\n  // Handle khi submit\r\n  handleSubmit = event => {\r\n    //K load lại trang\r\n    event.preventDefault();\r\n    this.props.onSubmit({\r\n      id: shortid.generate(),\r\n      text: this.textInput.current.value,\r\n      complete: false,\r\n      editing: false\r\n    });\r\n    this.setState({\r\n      textInput: \"\"\r\n    });\r\n    const text = this.textInput.current.value;\r\n    axios.post(`https://5ce4aac9c1ee360014725c80.mockapi.io/api/todotasks`, {\r\n      text\r\n    });\r\n    // .then(res => {\r\n    // console.log(res);\r\n    // console.log(res.data);\r\n    // });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"sub_content\">\r\n          <form className=\"main_form\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              ref={this.textInput}\r\n              placeholder=\"What needs to be done?\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nTodoForm.propTypes = {\r\n  onSubmit: PropTypes.func\r\n};\r\n","import React from \"react\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { hasError: false };\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  // componentDidCatch() {\r\n  //   // Display fallback UI\r\n  //   this.setState({ hasError: true });\r\n  // }\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  // render() {\r\n  //   if (this.state.hasError) {\r\n  //     // You can render any custom fallback UI\r\n  //     return <h1>Some things wrong!</h1>;\r\n  //   }\r\n  //   return this.props.children;\r\n  // }\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport axios from \"axios\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport TodoContext from \"./TodoContext\";\r\n\r\nexport default function TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoToShow, setTodoToShow] = useState(\"all\");\r\n  useEffect(() => {\r\n    const instance = axios.create({});\r\n    instance\r\n      .get(`https://5ce4aac9c1ee360014725c80.mockapi.io/api/todotasks`)\r\n      .then(res => {\r\n        setTodos(res.data.sort((a, b) => b.id - a.id));\r\n      });\r\n  }, []);\r\n  const addTodo = todo => {\r\n    setTodos([todo, ...todos]);\r\n  };\r\n  const toggleComplete = todo => {\r\n    const todotasks = {\r\n      complete: !todo.complete\r\n    };\r\n    const instance = axios.create({});\r\n    instance.put(\r\n      `https://5ce4aac9c1ee360014725c80.mockapi.io/api/todotasks/${todo.id}`,\r\n      todotasks\r\n    );\r\n    // .then(res => console.log(res.data));\r\n    setTodos(\r\n      todos.map(t => {\r\n        if (t.id === todo.id) {\r\n          return {\r\n            ...t,\r\n            complete: !t.complete\r\n          };\r\n        } else {\r\n          return t;\r\n        }\r\n      })\r\n    );\r\n  };\r\n  const updateTodoToShow = text => {\r\n    setTodoToShow(text);\r\n  };\r\n  const handleDeleteTodo = async id => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n    const instance = axios.create({});\r\n    instance.delete(\r\n      `https://5ce4aac9c1ee360014725c80.mockapi.io/api/todotasks/${id}`\r\n    );\r\n    // await API.delete(`todotasks/${id}`);\r\n    // console.log(response);\r\n  };\r\n  const showEditTodoTask = id => {\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            editing: true\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n  };\r\n  const editTodoTask = (id, editText) => {\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            text: editText,\r\n            editing: false\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n    const todotasks = {\r\n      text: editText\r\n    };\r\n    const instance = axios.create({});\r\n    instance.put(\r\n      `https://5ce4aac9c1ee360014725c80.mockapi.io/api/todotasks/${id}`,\r\n      todotasks\r\n    );\r\n  };\r\n  const deleteEdit = id => {\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            editing: false\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n  };\r\n  const filter = () => {\r\n    if (todoToShow === \"all\") {\r\n      return todos;\r\n    } else if (todoToShow === \"active\") {\r\n      return todos.filter(todo => !todo.complete);\r\n    } else if (todoToShow === \"complete\") {\r\n      return todos.filter(todo => todo.complete);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"content\">\r\n      <TodoForm onSubmit={addTodo} />\r\n      <div className=\"sub_content\">\r\n        <ul>\r\n          <li\r\n            style={{\r\n              color: todoToShow === \"all\" ? \"#fff\" : \"#666\"\r\n            }}\r\n            className=\"cursor\"\r\n            onClick={() => updateTodoToShow(\"all\")}\r\n          >\r\n            All\r\n          </li>\r\n          <li\r\n            style={{\r\n              color: todoToShow === \"active\" ? \"#fff\" : \"#666\"\r\n            }}\r\n            className=\"cursor\"\r\n            onClick={() => updateTodoToShow(\"active\")}\r\n          >\r\n            Active\r\n          </li>\r\n          <li\r\n            style={{\r\n              color: todoToShow === \"complete\" ? \"#fff\" : \"#666\"\r\n            }}\r\n            className=\"cursor\"\r\n            onClick={() => updateTodoToShow(\"complete\")}\r\n          >\r\n            Completed\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <ErrorBoundary>\r\n        <TodoContext.Provider\r\n          value={{\r\n            toggleComplete,\r\n            onDelete: handleDeleteTodo,\r\n            deleteEdit\r\n          }}\r\n        >\r\n          {filter().map(todo => (\r\n            <Todo\r\n              key={todo.id}\r\n              todo={todo}\r\n              showEditTodoTask={showEditTodoTask}\r\n              editTodoTask={editTodoTask}\r\n            />\r\n          ))}\r\n        </TodoContext.Provider>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return <TodoList />;\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst ColorContext = React.createContext();\r\n\r\nexport default ColorContext;\r\n","import React from \"react\";\r\n\r\nconst LoginContext = React.createContext();\r\n\r\nexport default LoginContext;\r\n","import React from \"react\";\r\nimport ColorContext from \"./ColorContext\";\r\nimport LoginContext from \"./LoginContext\";\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"item\">\r\n        <ColorContext.Consumer>\r\n          {changBg => (\r\n            <LoginContext.Consumer>\r\n              {onLogin => (\r\n                <button\r\n                  onClick={() => onLogin(\"hasLogin\")}\r\n                  style={{ backgroundColor: changBg.color }}\r\n                >\r\n                  {this.props.button}\r\n                </button>\r\n              )}\r\n            </LoginContext.Consumer>\r\n          )}\r\n        </ColorContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport changeColor from \"./img/changeIcon.jpg\";\r\nimport ColorContext from \"./components/ColorContext\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    button: [\"GitHub\", \"Google\", \"Twiter\"],\r\n    st: \"\"\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"item padb50\">Sign in</div>\r\n        {this.state.button.map((btn, key) => {\r\n          return <Button key={key} button={btn} onLogin={this.props.onLogin} />;\r\n        })}\r\n        <ColorContext.Consumer>\r\n          {value => (\r\n            <img\r\n              className=\"changeColor\"\r\n              src={changeColor}\r\n              alt=\"htactive\"\r\n              width=\"21\"\r\n              height=\"21\"\r\n              onClick={() => value.function(this.state.st)}\r\n            />\r\n          )}\r\n        </ColorContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport \"./App.css\";\r\nimport Login from \"./Login\";\r\nimport LoginContext from \"./components/LoginContext\";\r\n\r\nexport default class Parent extends React.Component {\r\n  state = {\r\n    page: \"isLogin\"\r\n  };\r\n  handleClick = page => {\r\n    this.setState({\r\n      page\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.page !== \"isLogin\") {\r\n      return <Home />;\r\n    } else {\r\n      return (\r\n        <LoginContext.Provider value={this.handleClick}>\r\n          <Login />\r\n        </LoginContext.Provider>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport circle from \"./img/circle_icon.png\";\r\nimport github from \"./img/github_icon.png\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"item\">\r\n          <img\r\n            className=\"circle\"\r\n            src={circle}\r\n            alt=\"htactive\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n          />\r\n          <div className=\"title\">Todo React Redux</div>\r\n        </div>\r\n        <div className=\"item\">\r\n          <img\r\n            className=\"githubIcon\"\r\n            src={github}\r\n            alt=\"htactive\"\r\n            width=\"21\"\r\n            height=\"21\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React from \"react\";\nimport Parent from \"./Parent\";\nimport Header from \"./Header\";\nimport ColorContext from \"./components/ColorContext\";\n\nexport default class App extends React.Component {\n  state = {\n    bgColor: [\"red\", \"yellow\", \"blue\", \"green\", \"purple\", \"pink\"],\n    color: \"\"\n  };\n  change = () => {\n    let bgColors = this.state.bgColor;\n    const color = bgColors[Math.floor(Math.random() * bgColors.length)];\n    this.setState({\n      color\n    });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <ColorContext.Provider\n          value={{ color: this.state.color, function: this.change }}\n        >\n          <Header />\n          <Parent />\n        </ColorContext.Provider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}